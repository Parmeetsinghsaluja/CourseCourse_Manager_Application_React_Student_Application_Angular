{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/hello-world/hello-world.component.css","webpack:///./src/app/hello-world/hello-world.component.html","webpack:///./src/app/hello-world/hello-world.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/coruse.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/topic.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/topic-tabs/topic-tabs.component.css","webpack:///./src/app/topic-tabs/topic-tabs.component.html","webpack:///./src/app/topic-tabs/topic-tabs.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {CourseNavigatorServiceClient} from \"./services/course-navigator.service.client\";\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {CourseServiceClient} from \"./services/course.service.client\";\nimport {routing} from \"./app.routing\";\nimport {CourseViewerComponent} from './course-viewer/course-viewer.component';\nimport {ModuleListComponent} from './module-list/module-list.component';\nimport {ModuleServiceClient} from \"./services/module.service.client\";\nimport {LessonTabsComponent} from './lesson-tabs/lesson-tabs.component';\nimport {TopicTabsComponent} from './topic-tabs/topic-tabs.component';\nimport {LessonServiceClient} from \"./services/lesson.service.client\";\nimport {TopicServiceClient} from \"./services/topic.service.client\";\nimport {WidgetListComponent} from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from \"./services/widget.service.client\";\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {UserServiceClient} from \"./services/user.service.client\";\nimport {SectionListComponent} from './section-list/section-list.component';\nimport {SectionServiceClient} from \"./services/section.service.client\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldComponent,\n    CourseNavigatorComponent,\n    WhiteBoardComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    TopicTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    TopicServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { WhiteBoardComponent } from \"./white-board/white-board.component\";\nimport {CourseViewerComponent} from \"./course-viewer/course-viewer.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {RegisterComponent} from \"./register/register.component\";\nimport {ProfileComponent} from \"./profile/profile.component\";\nimport {SectionListComponent} from \"./section-list/section-list.component\";\nconst appRoutes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\n  { path: 'home', component: WhiteBoardComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'register', component: RegisterComponent},\n  { path: 'profile', component: ProfileComponent},\n  { path: 'home', component: WhiteBoardComponent},\n  { path: 'course/:courseId', component: CourseViewerComponent },\n  { path: 'course/:courseId/section', component: SectionListComponent},\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId/topic/:topicId', component: CourseViewerComponent },\n  { path: 'widget/:topicId', component: CourseViewerComponent },\n  { path: '**', component: WhiteBoardComponent} // last\n];\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \".card {\\n  margin-bottom: 15px;\\n}\\n\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">{{course.title}}</h4>\\n        <p *ngIf=\\\" role != null && role != 'admin' && !displayEnroll(course.id)\\\"> Course Grade: {{grade}}</p>\\n        <a routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-primary\\\">Modules</a>\\n        <a *ngIf=\\\"role === 'admin'\\\" routerLink=\\\"/course/{{course.id}}/section\\\"\\n           class=\\\"btn btn-primary\\\">Add Section</a>\\n        <a *ngIf=\\\"role !== 'admin' && role != null && displayEnroll(course.id)\\\" routerLink=\\\"/course/{{course.id}}/section\\\"\\n             class=\\\"btn btn-primary\\\">Enroll</a>\\n        <a *ngIf=\\\"role !== 'admin' && role != null && !displayEnroll(course.id)\\\"\\n           class=\\\"btn btn-success\\\">Enrolled</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {Course} from \"../models/coruse.model.client\";\n\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private userService: UserServiceClient,\n              private sectionService: SectionServiceClient) { }\n\n  courses: Course[] = [];\n  sections;\n  userId;\n  grade = 'NA';\n  role = null;\n  displayEnroll(courseId) {\n    let boolean = true;\n    for (const res of this.sections){\n        if (res.section == null) {\n          return boolean;\n        }\n        if (res.section.courseId === courseId) {\n          boolean = false;\n        }\n    }\n    return boolean;\n  }\n  callback(response) {\n    return response.json();\n  }\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n\n    this.userService\n      .profile()\n      .then((response) => response.status === 403 ?\n        this.role = null :\n        this.callback(response)\n          .then((user) => {\n            this.role = user.role;\n            this.userId = user.userId;\n            this.sectionService\n              .findSectionsForStudent()\n              .then(sections => this.sections = sections );\n          }));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n<h1>Course Navigator ({{courses.length}})</h1>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\n        <li *ngFor=\\\"let course of courses\\\"\\n            (click)=\\\"selectCourse(course.id)\\\"\\n            class=\\\"list-group-item\\\">\\n          {{course.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Modules</li>\\n        <li *ngFor=\\\"let module of modules\\\" class=\\\"list-group-item\\\">\\n          {{module.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">lessons</div>\\n    <div class=\\\"col-3\\\">widgets</div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from \"../services/course-navigator.service.client\";\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  constructor(private service: CourseNavigatorServiceClient) { }\n\n  courses = [];\n  modules = [];\n\n  selectCourse(courseId) {\n    this.service.findAllModulesForCourses(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{course.title}}</h2>\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/coruse.model.client\";\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private service: CourseServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course: Course = new Course();\n  loadCourse(courseId) {\n    this.service.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>{{message}}</h1>\\n\\n<h2>Courses ({{courses.length}})</h2>\\n\\n<ul>\\n  <li *ngFor=\\\"let course of courses\\\" class=\\\"list-item\\\" style=\\\"\\\">\\n    {{course.title}}\\n    <button (click)=\\\"deleteCourse(course.id)\\\">Delete</button>\\n  </li>\\n</ul>\\n<input [(ngModel)]=\\\"courseTitle\\\"/>\\n<button (click)=\\\"addCourse(courseTitle)\\\">\\n  Add Course\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\nexport class HelloWorldComponent implements OnInit {\n\n  courseTitle;\n  message = 'Hello from Hello World Component!';\n  courses = [\n    {title: 'CS5200', id: 123},\n    {title: 'CS5610', id: 234},\n    {title: 'CS3200', id: 345},\n    {title: 'CS4550', id: 456}\n  ];\n  deleteCourse(courseId) {\n    this.courses = this.courses.filter(course =>\n      course.id !== courseId\n    );\n  }\n\n  addCourse(title) {\n    this.courses.push({\n      title: title,\n      id: title\n    });\n    this.courseTitle = '';\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': lesson.id == lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-topic-tabs></app-topic-tabs>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {LessonServiceClient} from \"../services/lesson.service.client\";\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private service: LessonServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.courseId, this.moduleId);\n  }\n\n  loadLessons(courseId, moduleId) {\n    this.courseId = courseId;\n    this.moduleId = moduleId;\n    this.service.findLessonsForModule(courseId, moduleId)\n      .then(lessons => this.lessons = lessons);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">White Board Home</a>\\n        </li>\\n        <li  class=\\\"nav-item  active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <br>\\n  <h4 align =\\\"center\\\">Enter Username and Password</h4>\\n  <br>\\n\\n    <div class=\\\"form-group\\\">\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  login(username, password) {\n    username == null || password == null ? alert(\"Username/Password Can't be empty\") :\n    this.service\n      .login(username, password)\n      .then((user) => {\n        user == null ? alert(\"Wrong Username/Password\") : this.router.navigate(['profile']);\n      });\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n  ngOnInit() {\n    this.service\n    .profile()\n    .then((response) => response.status === 403 ?\n      this.router.navigate(['login']) : this.router.navigate(['home']));\n  }\n\n}\n","export class Course {\n  id: number;\n  title: string;\n}\n","module.exports = \".active.wbdv {\\n  background-color: red;\\n  border-color: red;\\n}\\n\\n.active.wbdv a {\\n  color: white;\\n}\\n\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ModuleServiceClient} from \"../services/module.service.client\";\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private service: ModuleServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.service.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"navbar-nav\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">White Board Home</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item active\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" href= \\\"/login\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <br>\\r\\n  <h4 align =\\\"center\\\">Welcome {{username}}</h4>\\r\\n  <br>\\r\\n\\r\\n  <input [(ngModel)]=\\\"firstName\\\"\\r\\n         placeholder=\\\"first name\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <input [(ngModel)]=\\\"lastName\\\"\\r\\n         placeholder=\\\"lastName\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <input [(ngModel)]=\\\"email\\\"\\r\\n         placeholder=\\\"email\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <input [(ngModel)]=\\\"address\\\"\\r\\n         placeholder=\\\"address\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <input [(ngModel)]=\\\"phoneNumber\\\"\\r\\n         placeholder=\\\"phone number\\\"\\r\\n         class=\\\"form-control\\\"/>\\r\\n  <button (click)=\\\"update()\\\"\\r\\n          class=\\\"btn btn-primary btn-block\\\">\\r\\n    Update\\r\\n  </button>\\r\\n\\r\\n  <div *ngIf=\\\"role !== 'admin'\\\">\\r\\n    <br>\\r\\n    <br>\\r\\n    <h4>Your Enrollments are :</h4>\\r\\n    <ul class=\\\"list-group\\\">\\r\\n      <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\r\\n\\r\\n        <b>Course</b>: {{enrollment.section.courseName}}\\r\\n        <b>Section</b>: {{enrollment.section.name}}\\r\\n        <button *ngIf=\\\"role !== 'admin' && sections != null\\\" (click)=\\\"unenroll(enrollment.section)\\\"\\r\\n                class=\\\"float-right btn btn-primary\\\">Unenroll</button>\\r\\n      </li>\\r\\n    </ul>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {User} from \"../models/user.model.client\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Router} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router) { }\n\n  user = {};\n  username;\n  firstName;\n  lastName;\n  email;\n  address;\n  role;\n  phoneNumber;\n  userId;\n  sections = [];\n\n  update() {\n    this.service\n      .updateUser(this.userId, this.username, this.firstName, this.lastName, this.email , this.address , this.phoneNumber);\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n  unenroll(section) {\n    this.sectionService\n      .unenrollStudentInSection(section._id)\n      .then(() => {\n        this.sectionService\n          .findSectionsForStudent()\n          .then(sections => this.sections = sections );\n      });\n  }\n  callback(response) {\n    return response.json();\n  }\n  ngOnInit() {\n    this.service\n      .profile()\n      .then((response) => response.status === 403 ?\n        this.router.navigate(['login']) :\n        this.callback(response)\n          .then((user) => {\n            this.username = user.username;\n            this.userId = user._id;\n            this.firstName = user.firstName;\n            this.lastName = user.lastName;\n            this.email = user.email;\n            this.address = user.address;\n            this.phoneNumber = user.phoneNumber;\n            this.role = user.role;\n          }));\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => this.sections = sections );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">White Board Home</a>\\n        </li>\\n        <li  class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <br>\\n  <h4 align =\\\"center\\\">Enter Username and Password</h4>\\n  <br>\\n\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\"\\n         placeholder=\\\"verify password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) {\n  }\n\n  username;\n  password;\n  password2;\n\n  register(username, password, password2) {\n    username == null || password == null ? alert(\"Username/Password Can't be empty\") :\n      password !== password2 ? alert(\"Password and VerifyPassword does not match\") :\n        this.service\n          .createUser(username, password)\n          .then((promise) => {\n            promise.Status !== \"Username Taken\" ? this.router.navigate(['profile']) : alert(\"Username Taken\");\n          });\n  }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">White Board Home</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n        </li>\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/course/{{courseId}}/section\\\" >Sections</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <br>\\n  <h4 align =\\\"center\\\">Sections of {{courseName}}</h4>\\n  <br>\\n  <input *ngIf=\\\"role === 'admin'\\\"\\n         [(ngModel)]=\\\"sectionName\\\"\\n         placeholder=\\\"Section Name\\\"\\n         class=\\\"form-control\\\">\\n  <input *ngIf=\\\"role === 'admin'\\\"\\n         [(ngModel)]=\\\"seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n  <button *ngIf=\\\"role === 'admin'\\\"\\n          (click)=\\\"createOrUpdateSection(courseId, sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n           {{buttonName}}\\n  </button>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} {{section.seats}}\\n      <button *ngIf=\\\"role === 'admin'\\\" (click)=\\\"deleteSection(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Delete Section</button>\\n      &nbsp;\\n      &nbsp;\\n      &nbsp;\\n      <button *ngIf=\\\"role=== 'admin'\\\" (click)=\\\"setFields(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Update Section</button>\\n      <button *ngIf=\\\"role !== 'admin' && section.seats > 0\\\" (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private userService: UserServiceClient,\n              private courseService: CourseServiceClient,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSections(params['courseId']));\n  }\n  courseName;\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sections = [];\n  sectionId;\n  title;\n  buttonName= 'Add Section';\n  role = null;\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n  callback(response) {\n    return response.json();\n  }\n  createSection(sectionName, seats) {\n    this\n      .service\n      .createSection(this.courseId, this.courseName, sectionName, seats)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n  deleteSection(section) {\n    this\n      .service\n      .deleteSection(section)\n      .then(() => {\n        this.loadSections(this.courseId);\n      });\n  }\n  setFields(section) {\n    this.sectionName = section.name;\n    this.seats = section.seats;\n    this.buttonName = 'Update Section';\n    this.sectionId = section._id;\n  }\n  updateSection(sectionName, seats) {\n    this\n      .service\n      .updateSection(this.sectionId, this.courseId, sectionName, seats)\n      .then(() => {\n      this.loadSections(this.courseId);\n    });\n    this.buttonName = 'Add Section';\n  }\n  createOrUpdateSection(courseId, sectionName, seats) {\n    this.buttonName === 'Add Section' ?\n      this.createSection(sectionName, seats ) :\n      this.updateSection(sectionName, seats);\n  }\n  enroll(section) {\n    this.service\n      .enrollStudentInSection(section._id)\n      .then(() => {\n        this.router.navigate(['profile']);\n      });\n  }\n\n  ngOnInit() {\n    this.\n    courseService\n      .findCourseById(this.courseId)\n      .then(course => {\n        this.courseName = course.title ;\n        this.sectionName = course.title + ' Section 1';\n      });\n    this.userService\n      .profile()\n      .then((response) => response.status === 503 ?\n        this.router.navigate(['login']) :\n        this.callback(response)\n          .then((user) => {\n            this.role = user.role;\n          }));\n  }\n\n}\n","export class CourseNavigatorServiceClient {\n  findAllCourses() {\n    return fetch('http://saluja-summer1-2018.herokuapp.com/api/course')\n      .then(response => response.json());\n  }\n  findAllModulesForCourses(courseId) {\n    return fetch('http://saluja-summer1-2018.herokuapp.com/api/course/' + courseId + '/module')\n      .then(response => response.json());\n  }\n}\n","export class CourseServiceClient {\n  COURSE_URL = 'http://saluja-summer1-2018.herokuapp.com/api/course';\n  findAllCourses() {\n    return fetch(this.COURSE_URL)\n      .then(response => response.json());\n  }\n  findCourseById(courseId) {\n    return fetch(this.COURSE_URL + courseId)\n      .then(response => response.json());\n  }\n}\n","export class LessonServiceClient {\n  findLessonsForModule(courseId, moduleId) {\n    return fetch('http://saluja-summer1-2018.herokuapp.com/api/course/' + courseId + '/module/' + moduleId + '/lesson')\n      .then(response => response.json());\n  }\n}\n","export class ModuleServiceClient {\n  MODULE_URL = 'http://saluja-summer1-2018.herokuapp.com/api/course/COURSE_ID/module';\n  findModulesForCourse(courseId) {\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\n      .then(response => response.json());\n  }\n}\n","export class SectionServiceClient {\n\n  SECTION_URL = 'http://localhost:4000/api/course/COURSEID/section';\n  DELETE_SECTION_URL = 'http://localhost:4000/api/section';\n\n  findSectionsForStudent() {\n    const url = 'http://localhost:4000/api/student/section';\n    return fetch(url, {\n      credentials: 'include'\n    })\n      .then(response => response.json());\n  }\n\n  enrollStudentInSection(sectionId) {\n    const url = 'http://localhost:4000/api/section/' + sectionId + '/enrollment';\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n  unenrollStudentInSection(sectionId) {\n    const url = 'http://localhost:4000/api/section/' + sectionId + '/unenrollment';\n    return fetch(url, {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n  findSectionsForCourse(courseId) {\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\n      .then(response => response.json());\n  }\n\n  createSection(courseId, courseName, name, seats) {\n    const section = {courseId, courseName, name, seats};\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\n      method: 'post',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n  deleteSection(section) {\n    return fetch(this.DELETE_SECTION_URL, {\n      method: 'delete',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n  updateSection(sectionId, courseId, name, seats) {\n      const section = {_id: sectionId,\n        courseId: courseId,\n        name: name,\n        seats: seats};\n    return fetch(this.DELETE_SECTION_URL, {\n      method: 'put',\n      body: JSON.stringify(section),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n}\n","export class TopicServiceClient {\n  findTopicsForLesson(courseId, moduleId, lessonId) {\n    return fetch('http://saluja-summer1-2018.herokuapp.com/api/course/' + courseId + '/module/' +\n      moduleId + '/lesson/' + lessonId + '/topic')\n      .then(response => response.json());\n  }\n}\n","export class UserServiceClient {\n\n  findUserById(userId) {\n    return fetch('http://localhost:4000/api/user/' + userId)\n      .then(response => response.json());\n  }\n\n  login(username, password) {\n    const credentials = {\n      username: username,\n      password: password\n    };\n    return fetch('http://localhost:4000/api/login', {\n      method: 'post',\n      body: JSON.stringify(credentials),\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n\n  logout() {\n    return fetch('http://localhost:4000/api/logout', {\n      method: 'post',\n      credentials: 'include'\n    });\n  }\n\n  profile() {\n    return fetch('http://localhost:4000/api/profile',\n      {\n        credentials: 'include', // include, same-origin, *omit\n      })\n      .then(response => response);\n  }\n\n  updateUser(userId, username, firstName, lastName, email, address, phoneNumber) {\n    const user = {\n      userId : userId,\n      username: username,\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      address: address,\n      phoneNumber: phoneNumber\n    };\n    return fetch('http://localhost:4000/api/user', {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'put',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n  }\n  createUser(username, password) {\n    const role = username.toLowerCase() === \"admin\" ? \"admin\" : \"student\";\n    const user = {\n      username: username,\n      password: password,\n      role: role\n    };\n    return fetch('http://localhost:4000/api/user', {\n      body: JSON.stringify(user),\n      credentials: 'include', // include, same-origin, *omit\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json());\n  }\n}\n","export class WidgetServiceClient {\n  findWidgetsForLesson(topicId) {\n    return fetch('http://saluja-summer1-2018.herokuapp.com/api/widget' + topicId)\n      .then(response => response.json());\n  }\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\">\\n  <li *ngFor=\\\"let topic of topics\\\"\\n      class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\"\\n       [ngClass]=\\\"{'active': topic.id == topicId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lessonId}}/topic/{{topic.id}}\\\">\\n      {{topic.title}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {TopicServiceClient} from \"../services/topic.service.client\";\n\n@Component({\n  selector: 'app-topic-tabs',\n  templateUrl: './topic-tabs.component.html',\n  styleUrls: ['./topic-tabs.component.css']\n})\nexport class TopicTabsComponent implements OnInit {\n\n  constructor(private service: TopicServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(\n      params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  topicId;\n  topics = [];\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.topicId = params['topicId'];\n    this.loadTopics(this.courseId, this.moduleId, this.lessonId);\n  }\n\n  loadTopics(courseId, moduleId, lessonId) {\n    this.courseId = courseId;\n    this.moduleId = moduleId;\n    this.lessonId = lessonId;\n    this.service.findTopicsForLesson(courseId, moduleId, lessonId)\n      .then(topics => this.topics = topics);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n      <ul class=\\\"navbar-nav\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\">White Board Home</a>\\n        </li>\\n        <li *ngIf=\\\"role== null\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n        </li>\\n        <li *ngIf=\\\"role== null\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n        </li>\\n        <li *ngIf=\\\"role != null\\\" class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/profile\\\">Profile</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <br>\\n  <div class=\\\"jumbotron\\\">\\n    <h1>\\n      White Board\\n    </h1>\\n  </div>\\n  <br>\\n<div>\\n  <app-course-grid></app-course-grid>\\n</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private router: Router) { }\n  role = null;\n  callback(response) {\n    return response.json();\n  }\n  ngOnInit() {\n    this.service\n      .profile()\n      .then((response) => response.status === 403 ?\n        this.router.navigate(['home']) :\n        this.callback(response)\n          .then((user) => {\n            this.role = user.role;\n          }));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let widget of widgets\\\">\\n  <div [ngSwitch]=\\\"widget.widgetType\\\">\\n    <div *ngSwitchCase=\\\"'Heading'\\\">\\n      <div [ngSwitch]=\\\"widget.headingValue\\\">\\n        <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n        <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n        <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n        <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\n        <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\n        <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Link'\\\">\\n      <a href=\\\"{{widget.link}}\\\">{{widget.text}}</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'List'\\\">\\n      <div [ngSwitch]=\\\"widget.listType\\\">\\n      <ul *ngSwitchCase=\\\"'1'\\\" class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\"\\n            *ngFor=\\\"let item of widget.text.split('\\\\n')\\\">\\n          {{item}}\\n        </li>\\n      </ul>\\n      <ol *ngSwitchCase=\\\"'2'\\\" class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\"\\n              *ngFor=\\\"let item of widget.text.split('\\\\n')\\\">\\n            {{item}}\\n          </li>\\n      </ol>\\n      </div>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Paragraph'\\\">\\n      <p>{{widget.text}}</p>\\n    </div>\\n    <div *ngSwitchCase=\\\"'Image'\\\">\\n      <img src={{widget.text}}>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {WidgetServiceClient} from \"../services/widget.service.client\";\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  topicId;\n  widgets = [];\n  setContext(params) {\n    this.topicId = params['topicId'];\n    this.loadWidgets(this.topicId);\n  }\n  loadWidgets(topicId) {\n    this.topicId = topicId;\n    this.service.findWidgetsForLesson(topicId)\n      .then(widgets => this.widgets = widgets);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}